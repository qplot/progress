<?php



/**
 * Implements hook_menu().
 */
// function qplot_progress_menu() {

//   // $items['devel/cache/clear'] = array(
//   //   'title' => 'Empty cache',
//   //   'page callback' => 'devel_cache_clear',
//   //   'description' => 'Clear the CSS cache and all database cache tables which store page, node, theme and variable caches.',
//   //   'access arguments' => array('access devel information'),
//   //   'file' => 'devel.pages.inc',
//   //   'menu_name' => 'devel',
//   // );


//   return $items;
// }

/**
 * Implementation of hook_theme()
 */
function qplot_progress_theme() {
  return array(
    'qplot_progress_status_messages' => array(
      'variables' => array('messages' => NULL),
      'template' => 'templates/status_messages'
    ),
    'qplot_progress_logo_area' => array(
      'variables' => array(),
      'template' => 'templates/logo_area'
    ),
    'qplot_progress_user_teaser' => array(
      'variables' => array('user' => NULL),
      'template' => 'templates/user_teaser'
    ),
    'qplot_progress_company_teaser' => array(
      'variables' => array('company' => NULL),
      'template' => 'templates/company_teaser'
    ),
    'qplot_progress_projects_teaser' => array(
      'variables' => array('items' => NULL),
      'template' => 'templates/projects_teaser'
    ),
    'qplot_progress_projects_menu' => array(
      'variables' => array('companies' => NULL),
      'template' => 'templates/projects_menu'
    ),
    'qplot_progress_project_overview' => array(
      'variables' => array('project' => NULL, 'items' => NULL),
      'template' => 'templates/project_overview'
    ),
    'qplot_progress_company_overview' => array(
      'variables' => array('company' => NULL, 'contacts' => NULL),
      'template' => 'templates/company_overview'
    ),
    'qplot_progress_phases_full' => array(
      'variables' => array('phases' => NULL),
      'template' => 'templates/phases_full'
    ),
    'qplot_progress_tasks_table' => array(
      'variables' => array('tasks' => NULL),
      'template' => 'templates/tasks_table'
    ),
    'qplot_progress_progress_widget' => array(
      'variables' => array('progress' => 0, 'caption' => TRUE),
      'template' => 'templates/progress_widget'
    ),
  );
}

/**
 * Implementation of hook_block_info()
 */
function qplot_progress_block_info() {
  $blocks = array(
    // QPlot Company logo area
    'logo_area' => array(
      'info' => ('Logo Area')
    ),
    // User mini teaser in sidebar menu area
    'user_teaser' => array(
      'info' => ('User Teaser')
    ),
    // Company mini teaser in sidebar menu area
    'company_teaser' => array(
      'info' => ('Company Teaser')
    ),
    // Projects mini teasers in sidebar menu area, favorites, flat
    'projects_teaser' => array(
      'info' => ('Projects Teaser')
    ),
    // Projects menu in sidebar menu area, categorized by company hierarchy
    'projects_menu' => array(
      'info' => ('Projects Menu')
    ),
    // Project overview teaser in main content area
    'project_overview' => array(
      'info' => ('Project Overview')
    ),
    // Company overview teaser in main content area
    'company_overview' => array(
      'info' => ('Company Overview')
    ),
    // Phases tab full in main content area
    'phases_full' => array(
      'info' => ('Phases Tab Listing')
    ),
    // Tasks table of specific phase
    'tasks_table' => array(
      'info' => ('Tasks Table')
    ),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view()
 */
function qplot_progress_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'logo_area':
      $block['content'] = theme('qplot_progress_logo_area');
      break;
    case 'user_teaser':
      // find user info
      $variables['user'] = array(
        'first' => 'John',
        'last' => 'Smith',
        'photo' => '',
        'status' => 'Online',
      );
      $block['content'] = theme('qplot_progress_user_teaser', $variables);
      break;
    case 'company_teaser':
      // find company info and asoociated properties
      $node = node_load(4);
      $wrapper = entity_metadata_wrapper('node', $node);
      $body = $wrapper->body->value();
      $variables['company'] = array(
        'title' => $wrapper->title->value(),
        'logo' => $wrapper->field_company_logo->file->url->value(),
        'description' => !empty($body) ? $wrapper->body->value->value() : '',
        'status' => 'Active',
        'edit' => url('node/' . $wrapper->getIdentifier() . '/edit', array(
          'query' => drupal_get_destination()
        )),
      );

      $block['content'] = theme('qplot_progress_company_teaser', $variables);
      break;
    case 'projects_teaser':
      // find out all projects and associated properties
      // $nids = qplot_api_find_nodes(
      //   array('type' => 'project'),
      //   array('field_project_company' => array(
      //     'target_id', 4, '='
      //   )),
      //   TRUE
      // );
      // find out all favorites by the current user
      $nids = array();
      $flags = flag_get_user_flags('node');
      if (!empty($flags['favorite_projects'])) {
        $nids = array_keys($flags['favorite_projects']);
      }
      $variables['items'] = array();
      foreach ($nids as $id) {
        $node = node_load($id);
        $wrapper = entity_metadata_wrapper('node', $node);
        $variables['items'][] = array(
          'title' => $wrapper->title->value(),
          'icon' => $wrapper->field_project_icon->name->value(),
          'description' => $wrapper->body->summary->value(),
          'progress' => $wrapper->field_project_progress->value(),
          'status' => $wrapper->field_project_status->name->value(),
          'view' => url('project/' . $wrapper->getIdentifier()),
        );
      }
      $block['content'] = theme('qplot_progress_projects_teaser', $variables);
      break;

    case 'projects_menu':
      // find out all projects
      $nids = qplot_api_find_nodes(
        array('type' => 'project'),
        array(),
        TRUE
      );
      foreach ($nids as $id) {
        $node = node_load($id);
        $wrapper = entity_metadata_wrapper('node', $node);
        $project_item = array(
          'title' => $wrapper->title->value(),
          'icon' => $wrapper->field_project_icon->name->value(),
          'company' => $wrapper->field_project_company->title->value(),
          // 'description' => $wrapper->body->summary->value(),
          'progress' => $wrapper->field_project_progress->value(),
          'status' => $wrapper->field_project_status->name->value(),
          'view' => url('project/' . $wrapper->getIdentifier()),
        );
        if (empty($project_item['company'])) {
          $project_item['company'] = 'Noname';
        }
        $variables['companies'][$project_item['company']][] = $project_item;
      }

      // $variables['companies'] = array();
      $block['content'] = theme('qplot_progress_projects_menu', $variables);
      break;

    case 'project_overview':
      // $nid = 10;
      $nid = arg(1);
      if (empty($nid) || !is_numeric($nid)) return array('content' => '');

      $node = node_load($nid);

      // find project info
      $wrapper = entity_metadata_wrapper('node', $node);
      $variables['project'] = array(
        'title' => $wrapper->title->value(),
        'photo' => ($wrapper->field_project_photo->value()) ? $wrapper->field_project_photo->file->url->value() : '',
        'icon' => $wrapper->field_project_icon->name->value(),
        'description' => $wrapper->body->summary->value(),
        'progress' => $wrapper->field_project_progress->value(),
        'status' => $wrapper->field_project_status->name->value(),
        'company' => $wrapper->field_project_company->title->value(),
        'flag' => flag_create_link('favorite_projects', $wrapper->getIdentifier()),
        'edit' => url('node/' . $wrapper->getIdentifier() . '/edit', array(
          'query' => drupal_get_destination()
        )),
      );
      // find phases info and associate properties
      $variables['items'] = array();
      $nids = qplot_api_find_nodes(
        array('type' => 'phase'),
        array('field_phase_project' => array(
          'target_id', $nid, '='
        )),
        TRUE
      );
      foreach ($nids as $id) {
        $node = node_load($id);
        $wrapper = entity_metadata_wrapper('node', $node);
        $variables['items'][] = array(
          'title' => $wrapper->title->value(),
          'description' => ($wrapper->body->raw()) ? $wrapper->body->summary->value() : '',
          'progress' => $wrapper->field_phase_progress->value(),
        );
      }

      $block['content'] = theme('qplot_progress_project_overview', $variables);
      break;

    case 'company_overview':
      // $cid = 4;
      $nid = arg(1);
      if (empty($nid) || !is_numeric($nid)) return array('content' => '');

      // find project info
      $node = node_load($nid);
      $wrapper = entity_metadata_wrapper('node', $node);
      $node = $wrapper->field_project_company->value();

      // find company info
      $wrapper = entity_metadata_wrapper('node', $node);
      $body = $wrapper->body->value();
      $logo = $wrapper->field_company_logo->value();
      $variables['company'] = array(
        'title' => $wrapper->title->value(),
        'logo' => !empty($logo) ? $wrapper->field_company_logo->file->url->value() : '',
        'description' => !empty($body) ? $wrapper->body->value->raw() : '',
        'edit' => url('node/' . $wrapper->getIdentifier() . '/edit', array(
          'query' => drupal_get_destination()
        )),
      );

      // find company contacts
      $variables['contacts'] = array();
      foreach ($wrapper->field_company_contacts->getIterator() as $cwrapper) {
        $variables['contacts'][] = array(
          'name' => $cwrapper->title->value(),
          'title' => $cwrapper->field_contact_title->value(),
          'photo' => $cwrapper->field_contact_photo->file->url->value(),
          'email' => $cwrapper->field_contact_email->value(),
          'phone' => $cwrapper->field_contact_phone->value()
        );
      }

      $block['content'] = theme('qplot_progress_company_overview', $variables);
      break;

    case 'phases_full':
      // $nid = 10;
      $nid = arg(1);
      if (empty($nid) || !is_numeric($nid)) return array('content' => '');

      // fill project info
      $variables['project'] = array(
        'create' => url('node/add/phase', array('query' => array_merge(
          array(
            'field_phase_project' => $nid,
          ), drupal_get_destination()
        ))),
      );
      // find phases info
      $pnids = qplot_api_find_nodes(
        array('type' => 'phase'),
        array('field_phase_project' => array(
          'target_id', $nid, '='
        )),
        TRUE, NULL,
        array('property' => array(
          'created' => 'DESC'
        ))
      );
      $variables['phases'] = array();
      foreach ($pnids as $pid) {
        $phase = node_load($pid);
        $phase_wrapper = entity_metadata_wrapper('node', $phase);
        $phase_item = array(
          'title' => $phase_wrapper->title->value(),
          'description' => ($phase_wrapper->body->raw()) ? $phase_wrapper->body->value->value() : '',
          'hours' => 0,
          'progress' => 0, //$phase_wrapper->field_phase_progress->value(),
          'status' => $phase_wrapper->field_phase_status->name->value(),
          'edit' => url('node/' . $phase_wrapper->getIdentifier() . '/edit', array(
            'query' => drupal_get_destination()
          )),
          'create' => url('node/add/task', array('query' => array_merge(
            array(
              'field_task_phase' => $pid,
              'field_task_project' => $nid,
            ), drupal_get_destination()
          ))),
          'tasks' => array(),
          'focus' => FALSE,
        );

        // find tasks for this phase
        $tnids = qplot_api_find_nodes(
          array('type' => 'task'),
          array('field_task_phase' => array(
            'target_id', $phase_wrapper->getIdentifier(), '='
          )),
          TRUE
        );
        foreach ($tnids as $tid) {
          $node = node_load($tid);
          $wrapper = entity_metadata_wrapper('node', $node);

          $task_ticket = $wrapper->field_task_ticket_url->value();
          $task_item = array(
            'title' => $wrapper->title->value(),
            // 'description' => $wrapper->body->value()->value(),
            'phase' => $wrapper->field_task_phase->title->value(),
            'progress' => $wrapper->field_task_progress->value(),
            'hours' => $wrapper->field_task_hours->value(),
            'added' => date('m/d/y', $wrapper->field_task_added->value()),
            'ticket' => !empty($task_ticket) ? l(
              $wrapper->field_task_ticket_url->title->value(),
              $wrapper->field_task_ticket_url->url->value(),
              array('attributes' => array('target' => '_blank'))
            ) : '',
            'edit' => url('node/' . $wrapper->getIdentifier() . '/edit', array(
              'query' => drupal_get_destination()
            )),
            'delete' => url('node/' . $wrapper->getIdentifier() . '/delete', array(
              'query' => drupal_get_destination()
            )),
          );
          // perform analysis and summary
          $phase_item['hours'] = $phase_item['hours'] + $task_item['hours'];
          $phase_item['progress'] = $phase_item['progress'] + $task_item['hours'] * $task_item['progress'] / 100;

          $phase_item['tasks'][] = $task_item;
        }
        if ($phase_item['progress']) {
          $phase_item['progress'] = round($phase_item['progress'] / $phase_item['hours'] * 100);
        }
        $variables['phases'][] = $phase_item;
      }
      // set current phase
      if (!empty($variables['phases'])) {
        $variables['phases'][0]['focus'] = TRUE;
      }

      $block['content'] = theme('qplot_progress_phases_full', $variables);
      break;

    case 'tasks_table':
      // find tasks of one phase for now
      $variables['tasks'] = array();
      $tnids = qplot_api_find_nodes(
        array('type' => 'task'),
        array('field_task_phase' => array(
          'target_id', 16, '='
        )),
        TRUE
      );
      foreach ($tnids as $tid) {
        $node = node_load($tid);
        $wrapper = entity_metadata_wrapper('node', $node);
        $variables['tasks'][] = array(
          'title' => $wrapper->title->value(),
          // 'description' => $wrapper->body->value()->value(),
          'phase' => $wrapper->field_task_phase->title->value(),
          'progress' => $wrapper->field_task_progress->value(),
          'hours' => $wrapper->field_task_hours->value(),
          'added' => date('m/d/y', $wrapper->field_task_added->value()),
          'edit' => url('node/' . $wrapper->getIdentifier() . '/edit', array(
            'query' => drupal_get_destination()
          )),
        );
      }

      $block['content'] = theme('qplot_progress_tasks_table', $variables);
      break;

    default:
      # code...
      break;
  }

  return $block;
}

// function theme_devel_querylog_row($variables) {
//   $row = $variables['row'];
//   $i = 0;
//   $output = '';
//   foreach ($row as $cell) {
//     $i++;

//     if (is_array($cell)) {
//       $data = !empty($cell['data']) ? $cell['data'] : '';
//       unset($cell['data']);
//       $attr = $cell;
//     }
//     else {
//       $data = $cell;
//       $attr = array();
//     }

//     if (!empty($attr['class'])) {
//       $attr['class'] .= " cell cell-$i";
//     }
//     else {
//       $attr['class'] = "cell cell-$i";
//     }
//     $attr = drupal_attributes($attr);

//     $output .= "<div $attr>$data</div>";
//   }
//   return $output;
// }
